With singleton-like function getInstance circumventing circular dependancy there is no need for
socket on index.ejs

uploadImage logic will use .then to call: 

socket.on('newImage', (inputID) => {
        console.log(`Image upload by ${socket.id}:${inputID}`);
        var imagePath = updateFeed(inputID);
        io.emit('newImage', imagePath);
});

after updateDatabase has completed. 

updateFeed's returned value is passed into io.emit block



feed.ejs will contain a socket that:

- listens for the 'newImage' event emitted by server side logic

- creates div class='gallery-item'
- creates img with src= the imagePath variable being emitted [appendChild 'gallery-item']
- creates div class='gallery-item-info' [appendChild 'gallery-item']

- creates ul [appendChild 'gallery-item-info']

- creates li class='gallery-item-likes' [appendChild 'ul']
- creates span class='visually hidden' [appendChild 'gallery-item-likes']
- creates span.innerHTML 'Likes:'
- creates i class='fas fa-heart' aria-hidden='true' [appendChild 'gallery-item-likes']
- creates li.innerHTML '56' [placeholder for some future logic]

- creates li class='gallery-item-comments' [appendChild 'ul']
- creates span class='visually hidden' [appendChild 'gallery-item-comments']
- creates span.innerHTML 'Comments:'
- creates i class='fas fa-comment' aria-hidden='true' [appendChild 'gallery-item-comments']
- creates li.innerHTML '2' [placeholder for some future logic]